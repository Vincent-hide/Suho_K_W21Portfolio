[{"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\App.tsx":"1","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\index.tsx":"2","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Header\\index.tsx":"3","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\Navbar\\index.tsx":"4","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\Navbar\\styles.ts":"5","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\hooks\\useWindowPosition.ts":"6","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\Title\\index.tsx":"7","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Project\\index.tsx":"8","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\About\\index.tsx":"9","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\LangBarChart\\index.tsx":"10","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\About\\styles.ts":"11","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\ProjectCard\\index.tsx":"12","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\ProjectCard\\style.ts":"13","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Footer\\style.ts":"14","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Footer\\index.tsx":"15","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Project\\style.ts":"16","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\ProjectCard\\uitls.ts":"17","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Interest\\index.tsx":"18","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Interest\\styles.ts":"19","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Interest\\utils.tsx":"20","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\enums\\index.ts":"21","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\ReactHelmet\\index.tsx":"22","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\App.tsx":"23","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Project\\index.tsx":"24","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\About\\index.tsx":"25","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\components\\LangBarChart\\index.tsx":"26","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Footer\\style.ts":"27","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\components\\Navbar\\index.tsx":"28","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\index.tsx":"29","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Interest\\index.tsx":"30","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Footer\\index.tsx":"31","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Interest\\utils.tsx":"32","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\enums\\index.ts":"33","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Header\\index.tsx":"34"},{"size":1077,"mtime":1613538545342,"results":"35","hashOfConfig":"36"},{"size":556,"mtime":1609497122019,"results":"37","hashOfConfig":"36"},{"size":1970,"mtime":1610254837344,"results":"38","hashOfConfig":"39"},{"size":6305,"mtime":1614803044603,"results":"40","hashOfConfig":"36"},{"size":711,"mtime":1610226265673,"results":"41","hashOfConfig":"36"},{"size":806,"mtime":1609523465406,"results":"42","hashOfConfig":"36"},{"size":743,"mtime":1612315497335,"results":"43","hashOfConfig":"36"},{"size":988,"mtime":1613535822236,"results":"44","hashOfConfig":"36"},{"size":1924,"mtime":1612835792620,"results":"45","hashOfConfig":"36"},{"size":1855,"mtime":1612297345456,"results":"46","hashOfConfig":"36"},{"size":1563,"mtime":1612316218157,"results":"47","hashOfConfig":"36"},{"size":3554,"mtime":1612320968624,"results":"48","hashOfConfig":"36"},{"size":1544,"mtime":1612321073397,"results":"49","hashOfConfig":"36"},{"size":527,"mtime":1612318047493,"results":"50","hashOfConfig":"36"},{"size":1018,"mtime":1612318003823,"results":"51","hashOfConfig":"36"},{"size":558,"mtime":1612316251182,"results":"52","hashOfConfig":"36"},{"size":2216,"mtime":1614801979500,"results":"53","hashOfConfig":"36"},{"size":1092,"mtime":1612317589599,"results":"54","hashOfConfig":"36"},{"size":389,"mtime":1612295709723,"results":"55","hashOfConfig":"36"},{"size":938,"mtime":1611100000806,"results":"56","hashOfConfig":"36"},{"size":365,"mtime":1614802661631,"results":"57","hashOfConfig":"36"},{"size":685,"mtime":1613538311281,"results":"58","hashOfConfig":"36"},{"size":1077,"mtime":1613538545342,"results":"59","hashOfConfig":"60"},{"size":1001,"mtime":1615750655992,"results":"61","hashOfConfig":"60"},{"size":1924,"mtime":1612835792620,"results":"62","hashOfConfig":"60"},{"size":1855,"mtime":1612297345456,"results":"63","hashOfConfig":"60"},{"size":527,"mtime":1612318047493,"results":"64","hashOfConfig":"60"},{"size":8134,"mtime":1615750516151,"results":"65","hashOfConfig":"60"},{"size":556,"mtime":1609497122019,"results":"66","hashOfConfig":"60"},{"size":6418,"mtime":1615754613832,"results":"67","hashOfConfig":"60"},{"size":1018,"mtime":1612318003823,"results":"68","hashOfConfig":"60"},{"size":938,"mtime":1611100000806,"results":"69","hashOfConfig":"60"},{"size":365,"mtime":1614802661631,"results":"70","hashOfConfig":"60"},{"size":2528,"mtime":1615755236987,"results":"71","hashOfConfig":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1abov39",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"cktreo",{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iybp3t",{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\App.tsx",[],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\index.tsx",[],["161","162"],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Header\\index.tsx",[],["163","164"],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\Navbar\\index.tsx",["165","166","167","168","169","170"],"import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  AppBar,\n  IconButton,\n  Toolbar,\n  Drawer,\n  MenuItem,\n  Typography,\n  Button,\n  Link,\n  Box,\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { routes } from \"./routes.json\";\nimport { useStyles } from \"./styles\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\n\nexport const Navbar: React.FC<{ checked: boolean }> = ({ checked }) => {\n  const {\n    appbar,\n    appbarPrimary,\n    logo,\n    menuButton,\n    toolbar,\n    drawerContainer,\n  } = useStyles();\n\n  const [state, setState] = useState({\n    mobileView: false,\n    drawerOpen: false,\n  });\n\n  const { mobileView, drawerOpen } = state;\n\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\n    };\n\n    setResponsiveness();\n\n    window.addEventListener(\"resize\", () => setResponsiveness());\n  }, []);\n\n  const displayDesktop = () => {\n    return (\n      <Toolbar className={toolbar}>\n        <Typography variant=\"h6\" component=\"h1\" className={logo}>\n          Suho Kang\n        </Typography>\n        <div style={{ display: \"flex\" }}>\n          <MenuItem style={{ color: \"#000\" }}>\n            <MailOutlineIcon />\n            <span style={{ marginLeft: \".3rem\" }}>\n              suho.vincent.kang@gmail.com\n            </span>\n          </MenuItem>\n          <MenuItem style={{ color: \"#000\" }}>\n            <AssignmentIndIcon />\n            <a\n              href=\"https://drive.google.com/file/d/1JzPmxLZ5EEuQ-bLpJp4PDxvyIdD0vj6E/view?usp=sharing\"\n              target=\"_blank\"\n              style={{\n                marginLeft: \".3rem\",\n                textDecoration: \"none\",\n                color: \"#000\",\n              }}\n            >\n              Resume\n            </a>\n          </MenuItem>\n\n          {routes.map(({ label, href, external }, i) => {\n            if (external) {\n              return (\n                <a\n                  href={href}\n                  target=\"_blank\"\n                  style={{ textDecoration: \"none\" }}\n                  className={menuButton}\n                  key={i}\n                >\n                  <MenuItem style={{ color: \"#000\" }}>\n                    {label === \"GitHub\" && <GitHubIcon />}\n                    {label === \"Linked In\" && <LinkedInIcon />}\n                  </MenuItem>\n                </a>\n              );\n            } else {\n              return (\n                <Button\n                  {...{\n                    key: i,\n                    color: \"inherit\",\n                    to: href,\n                    component: RouterLink,\n                    className: menuButton,\n                  }}\n                >\n                  {label}\n                </Button>\n              );\n            }\n          })}\n        </div>\n      </Toolbar>\n    );\n  };\n\n  const displayMobile = () => {\n    const handleDrawerOpen = () =>\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\n    const handleDrawerClose = () =>\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\n\n    return (\n      <Toolbar style={{ color: \"#000\" }}>\n        <IconButton\n          {...{\n            edge: \"start\",\n            color: \"inherit\",\n            \"aria-label\": \"menu\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleDrawerOpen,\n          }}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Drawer\n          {...{\n            anchor: \"left\",\n            open: drawerOpen,\n            onClose: handleDrawerClose,\n          }}\n        >\n          <div className={drawerContainer}>\n            <MenuItem style={{ color: \"#000\" }}>\n              <MailOutlineIcon />\n              <span style={{ marginLeft: \".3rem\" }}>\n                suho.vincent.kang@gmail.com\n              </span>\n            </MenuItem>\n            <MenuItem style={{ color: \"#000\" }}>\n              <AssignmentIndIcon />\n              <a\n                href=\"https://drive.google.com/file/d/1JzPmxLZ5EEuQ-bLpJp4PDxvyIdD0vj6E/view?usp=sharing\"\n                target=\"_blank\"\n                style={{\n                  marginLeft: \".3rem\",\n                  textDecoration: \"none\",\n                  color: \"#000\",\n                }}\n              >\n                Resume\n              </a>\n            </MenuItem>\n            {routes.map(({ label, href, external }, i) => {\n              if (external) {\n                return (\n                  <a\n                    href={href}\n                    style={{ textDecoration: \"none\" }}\n                    key={i}\n                    target=\"_blank\"\n                  >\n                    <MenuItem style={{ color: \"#000\" }}>\n                      {label === \"GitHub\" && (\n                        <GitHubIcon style={{ marginRight: \"10px\" }} />\n                      )}\n                      {label === \"Linked In\" && (\n                        <LinkedInIcon style={{ marginRight: \"10px\" }} />\n                      )}\n                      {label}\n                    </MenuItem>\n                  </a>\n                );\n              } else {\n                return (\n                  <Link\n                    {...{\n                      component: RouterLink,\n                      to: href,\n                      color: \"inherit\",\n                      style: { textDecoration: \"none\" },\n                      key: i,\n                    }}\n                  >\n                    <MenuItem>{label}</MenuItem>\n                  </Link>\n                );\n              }\n            })}\n          </div>\n        </Drawer>\n\n        <div>\n          <Typography variant=\"h6\" component=\"h1\" className={logo}>\n            Suho Kang\n          </Typography>\n        </div>\n      </Toolbar>\n    );\n  };\n\n  return (\n    <AppBar className={!checked ? appbar : appbarPrimary} elevation={0}>\n      {mobileView ? displayMobile() : displayDesktop()}\n    </AppBar>\n  );\n};\n","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\Navbar\\styles.ts",[],["171","172"],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\hooks\\useWindowPosition.ts",[],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\Title\\index.tsx",[],["173","174"],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Project\\index.tsx",["175","176"],"import React from \"react\";\nimport { Container, Grid, Box } from \"@material-ui/core\";\nimport { ProjectCard } from \"../../components/ProjectCard\";\nimport { useWindowPosition } from \"../../hooks/useWindowPosition\";\nimport { Title } from \"../../components/Title\";\nimport { LangBarChart } from \"../../components/LangBarChart\";\nimport { projects } from \"./projects.json\";\nimport { useStyles } from \"./style\";\n\nexport const Project: React.FC = () => {\n  const { chartWrapper, root } = useStyles();\n  const checked = useWindowPosition(\"header\");\n\n  return (\n    <Box>\n      <Title title={\"Projects\"} />\n      <div className={chartWrapper}>\n        <LangBarChart />\n      </div>\n\n      <Grid container style={{ maxWidth: 1410, margin: \"auto\" }}>\n        {projects.map((project) => (\n          <Grid key={project.id} justify=\"center\" container item md={6} sm={6} lg={4}>\n            <ProjectCard checked={checked} project={project} />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n",["177","178"],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\About\\index.tsx",[],["179","180"],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\LangBarChart\\index.tsx",["181"],"import React from \"react\";\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\r\n\r\nimport { data } from \"./language.json\";\r\n\r\n// const toolTipContents = (label: string) => {\r\n//   if (label === 'Page A') {\r\n//     return 'Page A is about men\\'s clothing';\r\n//   } if (label === 'Page B') {\r\n//     return 'Page B is about women\\'s dress';\r\n//   } if (label === 'Page C') {\r\n//     return 'Page C is about women\\'s bag';\r\n//   } if (label === 'Page D') {\r\n//     return 'Page D is about household goods';\r\n//   } if (label === 'Page E') {\r\n//     return 'Page E is about food';\r\n//   } if (label === 'Page F') {\r\n//     return 'Page F is about baby food';\r\n//   }\r\n// }\r\n\r\n// type Props = {\r\n//   payload: any,\r\n//   label: string,\r\n//   active: boolean\r\n// }\r\n\r\n// const CustomTooltip:React.FC<Props> = ({ payload, label, active }) => {\r\n//   if (active) {\r\n//     return (\r\n//       <div className=\"custom-tooltip\">\r\n//         <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n//         <p className=\"intro\">{toolTipContents(label)}</p>\r\n//         <p className=\"desc\">Anything you want can be displayed here.</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return null;\r\n// }\r\n\r\nexport const LangBarChart:React.FC = () => {\r\n  return (\r\n    <BarChart\r\n      width={700}\r\n      height={300}\r\n      data={data}\r\n      layout=\"vertical\"\r\n      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n    >\r\n      <XAxis type=\"number\" hide={true} domain={[0, 100]} />\r\n      <YAxis type=\"category\" dataKey=\"name\" />\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      {/* <Tooltip content={<CustomTooltip />}/> */}\r\n      <Bar dataKey=\"exp\" animationDuration={2000}>\r\n        {data.map((entry, index) => (\r\n          <Cell key={index} fill={entry.color} />\r\n        ))}\r\n      </Bar>\r\n    </BarChart>\r\n  );\r\n}\r\n",["182","183"],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\About\\styles.ts",[],["184","185"],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\ProjectCard\\index.tsx",["186","187","188","189","190","191"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Collapse,\r\n  Button,\r\n  Box,\r\n  Avatar,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory, BrowserRouter } from \"react-router-dom\";\r\nimport { useStyles } from \"./style\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport DevicesIcon from \"@material-ui/icons/Devices\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport utils from \"./uitls\";\r\n\r\ninterface Props {\r\n  checked: boolean;\r\n  project: any;\r\n}\r\n\r\nexport const ProjectCard: React.FC<Props> = ({ checked, project }) => {\r\n  const history = useHistory();\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n\r\n  const {\r\n    root,\r\n    media,\r\n    projectFooter,\r\n    programmingLang,\r\n    gitIcon,\r\n    expand,\r\n    expandOpen,\r\n    cardContent\r\n  } = useStyles();\r\n  const { id, title, description, link, git, icons, details } = project;\r\n  const { iconHelper, appImgHelper } = utils;\r\n\r\n  const handleUrl = () => {\r\n    console.log(history, \"history\");\r\n    // history.push(git);\r\n  };\r\n\r\n  return (\r\n    <Collapse in={checked} {...(checked ? { timeout: 1000 } : {})}>\r\n      <Card className={root}>\r\n        {/* <CardActionArea> */}\r\n        <CardMedia className={media} image={appImgHelper(id)} />\r\n        <CardContent className={cardContent}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n        {/* </CardActionArea> */}\r\n\r\n        <CardActions className={projectFooter}>\r\n          <Box className={programmingLang}>\r\n            {icons.map((icon: string) => (\r\n              <Avatar\r\n                key={icon}\r\n                style={{ height: \"35px\", width: \"35px\" }}\r\n                src={iconHelper(icon)}\r\n              />\r\n            ))}\r\n          </Box>\r\n\r\n          {(link || git || details) && (\r\n            <Box>\r\n              {link && (\r\n                <IconButton>\r\n                  <a href={link} target=\"_blank\" className={gitIcon}>\r\n                    <DevicesIcon />\r\n                  </a>\r\n                </IconButton>\r\n              )}\r\n\r\n              {git && (\r\n                <IconButton>\r\n                  <a href={git} target=\"_blank\" className={gitIcon}>\r\n                    <GitHubIcon />\r\n                  </a>\r\n                </IconButton>\r\n              )}\r\n\r\n              {details && (\r\n                <IconButton\r\n                  className={clsx(expand, {\r\n                    [expandOpen]: expanded,\r\n                  })}\r\n                  onClick={() => setExpanded(!expanded)}\r\n                  aria-expanded={expanded}\r\n                  aria-label=\"show more\"\r\n                >\r\n                  {/* margin: to make a card same hight as others albeit it does not have github link */}\r\n                  <ExpandMoreIcon style={{ margin: \"1.7px\" }} />\r\n                </IconButton>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph>Details:</Typography>\r\n            <Typography paragraph>{details}</Typography>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Collapse>\r\n  );\r\n};\r\n","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\ProjectCard\\style.ts",[],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Footer\\style.ts",[],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Footer\\index.tsx",[],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Project\\style.ts",[],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\ProjectCard\\uitls.ts",["192"],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Interest\\index.tsx",["193","194"],"import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\n\r\nimport { Title } from \"../../components/Title\";\r\nimport { useStyles } from \"./styles\";\r\nimport { interests } from \"./interest.json\";\r\nimport utils from \"./utils\";\r\n\r\nexport const Interest: React.FC = () => {\r\n  const { container, paper, listContainer } = useStyles();\r\n  const { iconSwitch } = utils;\r\n  \r\n  return (\r\n    <Box>\r\n      <Title title={\"Interests\"} />\r\n      <Container maxWidth=\"lg\" className={container}>\r\n        <Paper className={paper}>\r\n          <div className={listContainer}>\r\n            <List>\r\n              {interests.map(({id, title}: any) => (\r\n                <ListItem key={id}>\r\n                <ListItemIcon>{iconSwitch(id)}</ListItemIcon>\r\n                <ListItemText primary={title} />\r\n              </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Interest\\styles.ts",[],["195","196"],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\sections\\Interest\\utils.tsx",["197","198"],"import { interests } from \"./interest.json\";\r\n\r\nimport DvrIcon from \"@material-ui/icons/Dvr\";\r\nimport SportsBasketballIcon from \"@material-ui/icons/SportsBasketball\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\r\n\r\nexport default {\r\n  // interstHelper: () => {\r\n    \r\n  //   // equivalent to zip function in python\r\n  //   const zip = (rows: Array<any>) =>\r\n  //     rows[0].map((_: any, c: any) => rows.map((row: Array<any>) => row[c]));\r\n\r\n  //   return zip([interests, icons]);\r\n  // },\r\n\r\n  iconSwitch: (id: number) => {\r\n    switch (id) {\r\n      case 1:\r\n        return <DvrIcon style={{ color: \"#999999\" }}/>;\r\n  \r\n      case 2:\r\n        return <SportsBasketballIcon style={{ color: \"#fc7f03\" }}/>;\r\n  \r\n      case 3:\r\n        return <AlbumIcon style={{ color: \"#000\" }} />;\r\n  \r\n      default:\r\n        return <AcUnitIcon style={{ color: \"#4da6ff\" }} />;\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\enums\\index.ts",[],"C:\\Users\\Vincent\\Desktop\\portfolio-v0\\src\\components\\ReactHelmet\\index.tsx",[],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\App.tsx",[],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Project\\index.tsx",["199","200"],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\About\\index.tsx",[],["201","202"],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\components\\LangBarChart\\index.tsx",["203"],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Footer\\style.ts",[],["204","205"],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\components\\Navbar\\index.tsx",["206","207","208","209","210","211","212","213","214","215"],"import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  AppBar,\n  IconButton,\n  Toolbar,\n  Drawer,\n  MenuItem,\n  Typography,\n  Button,\n  Link,\n  Box,\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { routes } from \"./routes.json\";\nimport { useStyles } from \"./styles\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\n\nexport const Navbar: React.FC<{ checked: boolean }> = ({ checked }) => {\n  const {\n    appbar,\n    appbarPrimary,\n    logo,\n    menuButton,\n    toolbar,\n    drawerContainer,\n  } = useStyles();\n\n  const [state, setState] = useState({\n    mobileView: false,\n    drawerOpen: false,\n  });\n\n  const { mobileView, drawerOpen } = state;\n\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 900\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\n    };\n\n    setResponsiveness();\n\n    window.addEventListener(\"resize\", () => setResponsiveness());\n  }, []);\n\n  const displayDesktop = () => {\n    return (\n      <Toolbar className={toolbar}>\n        <Typography variant=\"h6\" component=\"h1\" className={logo}>\n          Suho Kang\n        </Typography>\n        <div style={{ display: \"flex\" }}>\n          <MenuItem style={{ color: \"#000\" }}>\n            <MailOutlineIcon />\n            <span style={{ marginLeft: \".3rem\" }}>\n              suho.vincent.kang@gmail.com\n            </span>\n          </MenuItem>\n          <MenuItem style={{ color: \"#000\" }}>\n            <AssignmentIndIcon />\n            <a\n              href=\"https://drive.google.com/file/d/1JzPmxLZ5EEuQ-bLpJp4PDxvyIdD0vj6E/view?usp=sharing\"\n              target=\"_blank\"\n              style={{\n                marginLeft: \".3rem\",\n                textDecoration: \"none\",\n                color: \"#000\",\n              }}\n            >\n              Resume\n            </a>\n          </MenuItem>\n          <MenuItem style={{ color: \"#000\" }}>\n            <AssignmentIndIcon />\n            <a\n              href=\"https://drive.google.com/file/d/1wvQ-d385glT_BnRqoa9YoTuiolHsn_Us/view?usp=sharing\"\n              target=\"_blank\"\n              style={{\n                marginLeft: \".3rem\",\n                textDecoration: \"none\",\n                color: \"#000\",\n              }}\n            >\n              Award IEEE\n            </a>\n          </MenuItem>\n          <MenuItem style={{ color: \"#000\" }}>\n            <AssignmentIndIcon />\n            <a\n              href=\"https://drive.google.com/file/d/1pshwlhBbLlSCY5xhpb5aaXL30PjI6k7T/view?usp=sharing\"\n              target=\"_blank\"\n              style={{\n                marginLeft: \".3rem\",\n                textDecoration: \"none\",\n                color: \"#000\",\n              }}\n            >\n              Cover Letter\n            </a>\n          </MenuItem>\n          {routes.map(({ label, href, external }, i) => {\n            if (external) {\n              return (\n                <a\n                  href={href}\n                  target=\"_blank\"\n                  style={{ textDecoration: \"none\" }}\n                  className={menuButton}\n                  key={i}\n                >\n                  <MenuItem style={{ color: \"#000\" }}>\n                    {label === \"GitHub\" && <GitHubIcon />}\n                    {label === \"Linked In\" && <LinkedInIcon />}\n                  </MenuItem>\n                </a>\n              );\n            } else {\n              return (\n                <Button\n                  {...{\n                    key: i,\n                    color: \"inherit\",\n                    to: href,\n                    component: RouterLink,\n                    className: menuButton,\n                  }}\n                >\n                  {label}\n                </Button>\n              );\n            }\n          })}\n        </div>\n      </Toolbar>\n    );\n  };\n\n  const displayMobile = () => {\n    const handleDrawerOpen = () =>\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\n    const handleDrawerClose = () =>\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\n\n    return (\n      <Toolbar style={{ color: \"#000\" }}>\n        <IconButton\n          {...{\n            edge: \"start\",\n            color: \"inherit\",\n            \"aria-label\": \"menu\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleDrawerOpen,\n          }}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Drawer\n          {...{\n            anchor: \"left\",\n            open: drawerOpen,\n            onClose: handleDrawerClose,\n          }}\n        >\n          <div className={drawerContainer}>\n            <MenuItem style={{ color: \"#000\" }}>\n              <MailOutlineIcon />\n              <span style={{ marginLeft: \".3rem\" }}>\n                suho.vincent.kang@gmail.com\n              </span>\n            </MenuItem>\n            <MenuItem style={{ color: \"#000\" }}>\n              <AssignmentIndIcon />\n              <a\n                href=\"https://drive.google.com/file/d/1JzPmxLZ5EEuQ-bLpJp4PDxvyIdD0vj6E/view?usp=sharing\"\n                target=\"_blank\"\n                style={{\n                  marginLeft: \".3rem\",\n                  textDecoration: \"none\",\n                  color: \"#000\",\n                }}\n              >\n                Resume\n              </a>\n            </MenuItem>\n            <MenuItem style={{ color: \"#000\" }}>\n            <AssignmentIndIcon />\n            <a\n              href=\"https://drive.google.com/file/d/1wvQ-d385glT_BnRqoa9YoTuiolHsn_Us/view?usp=sharing\"\n              target=\"_blank\"\n              style={{\n                marginLeft: \".3rem\",\n                textDecoration: \"none\",\n                color: \"#000\",\n              }}\n            >\n              Award IEEE\n            </a>\n          </MenuItem>\n          <MenuItem style={{ color: \"#000\" }}>\n            <AssignmentIndIcon />\n            <a\n              href=\"https://drive.google.com/file/d/1pshwlhBbLlSCY5xhpb5aaXL30PjI6k7T/view?usp=sharing\"\n              target=\"_blank\"\n              style={{\n                marginLeft: \".3rem\",\n                textDecoration: \"none\",\n                color: \"#000\",\n              }}\n            >\n              Cover Letter\n            </a>\n          </MenuItem>\n            {routes.map(({ label, href, external }, i) => {\n              if (external) {\n                return (\n                  <a\n                    href={href}\n                    style={{ textDecoration: \"none\" }}\n                    key={i}\n                    target=\"_blank\"\n                  >\n                    <MenuItem style={{ color: \"#000\" }}>\n                      {label === \"GitHub\" && (\n                        <GitHubIcon style={{ marginRight: \"10px\" }} />\n                      )}\n                      {label === \"Linked In\" && (\n                        <LinkedInIcon style={{ marginRight: \"10px\" }} />\n                      )}\n                      {label}\n                    </MenuItem>\n                  </a>\n                );\n              } else {\n                return (\n                  <Link\n                    {...{\n                      component: RouterLink,\n                      to: href,\n                      color: \"inherit\",\n                      style: { textDecoration: \"none\" },\n                      key: i,\n                    }}\n                  >\n                    <MenuItem>{label}</MenuItem>\n                  </Link>\n                );\n              }\n            })}\n          </div>\n        </Drawer>\n\n        <div>\n          <Typography variant=\"h6\" component=\"h1\" className={logo}>\n            Suho Kang\n          </Typography>\n        </div>\n      </Toolbar>\n    );\n  };\n\n  return (\n    <AppBar className={!checked ? appbar : appbarPrimary} elevation={0}>\n      {mobileView ? displayMobile() : displayDesktop()}\n    </AppBar>\n  );\n};\n",["216","217"],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\index.tsx",[],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Interest\\index.tsx",["218","219","220","221","222","223","224","225"],"import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\n\r\nimport { Title } from \"../../components/Title\";\r\nimport { useStyles } from \"./styles\";\r\nimport { interests } from \"./interest.json\";\r\nimport utils from \"./utils\";\r\n\r\nimport entiryFilter from \"../../assets/projects/entityFilter.jpg\";\r\nimport tms from \"../../assets/projects/tms.jpg\";\r\nimport studentRegistration from \"../../assets/projects/studentRegistration.jpg\";\r\nimport erd from \"../../assets/projects/erd.jpg\";\r\nimport business from \"../../assets/projects/businessModal.jpg\";\r\nimport wireframe from \"../../assets/projects/wireframe.jpg\";\r\n\r\nexport const Interest: React.FC = () => {\r\n  const { container, paper, listContainer } = useStyles();\r\n  const { iconSwitch } = utils;\r\n\r\n  return (\r\n    <Box>\r\n      <Title title={\"Capstones\"} />\r\n      <Container maxWidth=\"lg\" className={container}>\r\n        <Paper className={paper}>\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Typography variant={\"h4\"}>Project Summary</Typography>\r\n          </Box>\r\n          <Box m={3}>\r\n            <Grid container alignItems=\"center\" justify=\"space-around\">\r\n              <Grid item xs={12} md={5} justify=\"center\">\r\n                <Typography>\r\n                  This software system will be a Tutoring Management System for\r\n                  a community centre called Working Women Community Centre,\r\n                  located in Toronto. The system will be designed to maximize\r\n                  the Program Coordinators’ productivity by providing tools to\r\n                  assist in automating CRUD operations, creating tutoring groups\r\n                  (student/tutor matching), scheduling tutoring sessions, and\r\n                  generating reports.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={5} justify=\"center\">\r\n                <Typography paragraph>\r\n                  The CRUD operations will be necessary to allow the program\r\n                  coordinators to manage information about the system users\r\n                  (student, tutor, guardian, program coordinator) and other\r\n                  program’s information as tutoring location. The system will\r\n                  also allow the program coordinator to combine several filters\r\n                  to find the best matches between students and tutors, which\r\n                  will then make possible the creation of tutoring groups and\r\n                  scheduling sessions with the groups created. Besides that, the\r\n                  system will allow the program coordinators to generate custom\r\n                  reports.\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <div className={listContainer}>\r\n            <Grid container>\r\n              <Grid item xs={12} md={4}>\r\n                <img width={300} src={entiryFilter} alt=\"capstone1\" />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <img width={300} src={tms} alt=\"capstone2\" />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <img width={300} src={studentRegistration} alt=\"capstone3\" />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Typography variant={\"h4\"}>Project Context</Typography>\r\n          </Box>\r\n          <Box m={3}>\r\n            <Grid container alignItems=\"center\" justify=\"space-around\">\r\n              <Grid item xs={12} md={5} justify=\"center\">\r\n                <Typography>\r\n                  The focus of The Tutoring Management System is to be the main\r\n                  tool to be used to manage the tutoring program. Therefore, it\r\n                  will handle the most strategic use cases as registering all of\r\n                  the beneficiaries of the tutoring program, facilitating the\r\n                  creation of best matches between students and tutors, and\r\n                  scheduling the tutoring sessions. Other use cases that are not\r\n                  needed so often by the organization, but not less important as\r\n                  generating user-tailored reports will also be handled by the\r\n                  system.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={5} justify=\"center\">\r\n                <img width={300} src={erd} alt=\"capstone2\" />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Typography variant={\"h4\"}>Business Modal & Wireframe</Typography>\r\n          </Box>\r\n          <Box m={3}>\r\n            <Grid container alignItems=\"center\" justify=\"space-around\">\r\n              <Grid item xs={12} md={5} justify=\"center\">\r\n                <img width={300} src={business} alt=\"capstone2\" />\r\n                <img width={300} src={wireframe} alt=\"capstone2\" />\r\n              </Grid>\r\n              <Grid item xs={12} md={5} justify=\"center\">\r\n                <Typography>\r\n                  There will be pre-formatted forms to create new users in the\r\n                  system. The creation of tutoring groups will be done through\r\n                  an interface where the program coordinator will be able to\r\n                  filter students (e.g., by grade-level, subject) and the system\r\n                  will display a list of tutors that have a match with the same\r\n                  criteria. After creating the tutoring groups, the system\r\n                  should allow the creation and scheduling of the tutoring\r\n                  sessions, which will be seen in a calendar and list type of\r\n                  view. The system will also generate user-definable reports\r\n                  based on users’ properties, groups, and sessions. At the same\r\n                  time that the system will maximize the work efficiency of the\r\n                  Program Coordinators, attending the client’s requirements, the\r\n                  system will also be easy to use and free of charge\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Footer\\index.tsx",[],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Interest\\utils.tsx",["226","227"],["228","229"],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\enums\\index.ts",[],"C:\\Users\\Vincent\\Desktop\\Suho_K_W21Portfolio\\src\\sections\\Header\\index.tsx",[],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"230","replacedBy":"234"},{"ruleId":"232","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":3,"column":3,"nodeType":"238","messageId":"239","endLine":3,"endColumn":13},{"ruleId":"236","severity":1,"message":"240","line":12,"column":3,"nodeType":"238","messageId":"239","endLine":12,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":68,"column":106,"nodeType":"243","endLine":68,"endColumn":121},{"ruleId":"241","severity":1,"message":"242","line":78,"column":19,"nodeType":"243","endLine":78,"endColumn":34},{"ruleId":"241","severity":1,"message":"242","line":146,"column":106,"nodeType":"243","endLine":146,"endColumn":121},{"ruleId":"241","severity":1,"message":"242","line":157,"column":21,"nodeType":"243","endLine":157,"endColumn":36},{"ruleId":"230","replacedBy":"244"},{"ruleId":"232","replacedBy":"245"},{"ruleId":"230","replacedBy":"246"},{"ruleId":"232","replacedBy":"247"},{"ruleId":"236","severity":1,"message":"248","line":2,"column":10,"nodeType":"238","messageId":"239","endLine":2,"endColumn":19},{"ruleId":"236","severity":1,"message":"249","line":11,"column":25,"nodeType":"238","messageId":"239","endLine":11,"endColumn":29},{"ruleId":"230","replacedBy":"250"},{"ruleId":"232","replacedBy":"251"},{"ruleId":"230","replacedBy":"252"},{"ruleId":"232","replacedBy":"253"},{"ruleId":"236","severity":1,"message":"254","line":2,"column":60,"nodeType":"238","messageId":"239","endLine":2,"endColumn":67},{"ruleId":"230","replacedBy":"255"},{"ruleId":"232","replacedBy":"256"},{"ruleId":"230","replacedBy":"257"},{"ruleId":"232","replacedBy":"258"},{"ruleId":"236","severity":1,"message":"259","line":5,"column":3,"nodeType":"238","messageId":"239","endLine":5,"endColumn":17},{"ruleId":"236","severity":1,"message":"260","line":10,"column":3,"nodeType":"238","messageId":"239","endLine":10,"endColumn":9},{"ruleId":"236","severity":1,"message":"261","line":16,"column":22,"nodeType":"238","messageId":"239","endLine":16,"endColumn":35},{"ruleId":"236","severity":1,"message":"262","line":45,"column":9,"nodeType":"238","messageId":"239","endLine":45,"endColumn":18},{"ruleId":"241","severity":1,"message":"242","line":80,"column":34,"nodeType":"243","endLine":80,"endColumn":49},{"ruleId":"241","severity":1,"message":"242","line":88,"column":33,"nodeType":"243","endLine":88,"endColumn":48},{"ruleId":"263","severity":1,"message":"264","line":23,"column":1,"nodeType":"265","endLine":94,"endColumn":3},{"ruleId":"236","severity":1,"message":"266","line":1,"column":17,"nodeType":"238","messageId":"239","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"267","line":11,"column":8,"nodeType":"238","messageId":"239","endLine":11,"endColumn":18},{"ruleId":"230","replacedBy":"268"},{"ruleId":"232","replacedBy":"269"},{"ruleId":"236","severity":1,"message":"270","line":1,"column":10,"nodeType":"238","messageId":"239","endLine":1,"endColumn":19},{"ruleId":"263","severity":1,"message":"264","line":8,"column":1,"nodeType":"265","endLine":33,"endColumn":3},{"ruleId":"236","severity":1,"message":"248","line":2,"column":10,"nodeType":"238","messageId":"239","endLine":2,"endColumn":19},{"ruleId":"236","severity":1,"message":"249","line":11,"column":25,"nodeType":"238","messageId":"239","endLine":11,"endColumn":29},{"ruleId":"230","replacedBy":"271"},{"ruleId":"232","replacedBy":"272"},{"ruleId":"236","severity":1,"message":"254","line":2,"column":60,"nodeType":"238","messageId":"239","endLine":2,"endColumn":67},{"ruleId":"230","replacedBy":"273"},{"ruleId":"232","replacedBy":"274"},{"ruleId":"236","severity":1,"message":"237","line":3,"column":3,"nodeType":"238","messageId":"239","endLine":3,"endColumn":13},{"ruleId":"236","severity":1,"message":"240","line":12,"column":3,"nodeType":"238","messageId":"239","endLine":12,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":70,"column":15,"nodeType":"243","endLine":70,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":84,"column":15,"nodeType":"243","endLine":84,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":98,"column":15,"nodeType":"243","endLine":98,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":113,"column":19,"nodeType":"243","endLine":113,"endColumn":34},{"ruleId":"241","severity":1,"message":"242","line":183,"column":17,"nodeType":"243","endLine":183,"endColumn":32},{"ruleId":"241","severity":1,"message":"242","line":197,"column":15,"nodeType":"243","endLine":197,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":211,"column":15,"nodeType":"243","endLine":211,"endColumn":30},{"ruleId":"241","severity":1,"message":"242","line":228,"column":21,"nodeType":"243","endLine":228,"endColumn":36},{"ruleId":"230","replacedBy":"275"},{"ruleId":"232","replacedBy":"276"},{"ruleId":"236","severity":1,"message":"266","line":1,"column":17,"nodeType":"238","messageId":"239","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"277","line":5,"column":3,"nodeType":"238","messageId":"239","endLine":5,"endColumn":7},{"ruleId":"236","severity":1,"message":"278","line":6,"column":3,"nodeType":"238","messageId":"239","endLine":6,"endColumn":11},{"ruleId":"236","severity":1,"message":"279","line":7,"column":3,"nodeType":"238","messageId":"239","endLine":7,"endColumn":15},{"ruleId":"236","severity":1,"message":"280","line":8,"column":3,"nodeType":"238","messageId":"239","endLine":8,"endColumn":15},{"ruleId":"236","severity":1,"message":"267","line":13,"column":8,"nodeType":"238","messageId":"239","endLine":13,"endColumn":18},{"ruleId":"236","severity":1,"message":"270","line":17,"column":10,"nodeType":"238","messageId":"239","endLine":17,"endColumn":19},{"ruleId":"236","severity":1,"message":"281","line":29,"column":11,"nodeType":"238","messageId":"239","endLine":29,"endColumn":21},{"ruleId":"236","severity":1,"message":"270","line":1,"column":10,"nodeType":"238","messageId":"239","endLine":1,"endColumn":19},{"ruleId":"263","severity":1,"message":"264","line":8,"column":1,"nodeType":"265","endLine":33,"endColumn":3},{"ruleId":"230","replacedBy":"282"},{"ruleId":"232","replacedBy":"283"},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],["284"],["285"],"@typescript-eslint/no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["284"],["285"],["284"],["285"],"'Container' is defined but never used.","'root' is assigned a value but never used.",["284"],["285"],["284"],["285"],"'Tooltip' is defined but never used.",["284"],["285"],["284"],["285"],"'CardActionArea' is defined but never used.","'Button' is defined but never used.","'BrowserRouter' is defined but never used.","'handleUrl' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'FolderIcon' is defined but never used.",["284"],["285"],"'interests' is defined but never used.",["284"],["285"],["284"],["285"],["284"],["285"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'iconSwitch' is assigned a value but never used.",["284"],["285"],"no-global-assign","no-unsafe-negation"]